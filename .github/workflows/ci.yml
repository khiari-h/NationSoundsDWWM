name: CI/CD for NationSounds

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      
      - name: Lint
        run: npm run lint
        working-directory: ./frontend
      
      - name: Build
        run: npm run build
        working-directory: ./frontend
      
      - name: Run tests
        run: npm test
        working-directory: ./frontend
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./frontend/build

  build-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: nationsoundstest
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: xdebug
      
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ./backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      
      - name: Generate Laravel APP_KEY
        id: generate_key
        run: echo "key=$(php artisan key:generate --show)" >> $GITHUB_OUTPUT
        working-directory: ./backend
      
      - name: Prepare Environment
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=localhost/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env
        working-directory: ./backend
      
      - name: Install Dependencies
        run: composer install
        working-directory: ./backend
      
      - name: Run Migrations
        run: php artisan migrate --force
        working-directory: ./backend
      
      - name: Run Tests
        run: php artisan test --coverage
        working-directory: ./backend

  deploy:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Production
        run: |
          # Ajouter ici vos commandes de déploiement spécifiques
          # Par exemple, déploiement sur serveur, plateforme cloud, etc.
          echo "Déploiement en production"